{"version":3,"sources":["App.js","index.js"],"names":["App","useState","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","useRef","useEffect","countdownDate","Date","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","clearInterval","current","startTimer","className","width","height","src","title","frameborder","allow","allowfullscreen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAsFeA,MAnFf,WAAgB,IAAD,EACqBC,mBAAS,MAD9B,mBACNC,EADM,KACKC,EADL,OAEuBF,mBAAS,MAFhC,mBAENG,EAFM,KAEMC,EAFN,OAG2BJ,mBAAS,MAHpC,mBAGNK,EAHM,KAGQC,EAHR,OAI2BN,mBAAS,MAJpC,mBAINO,EAJM,KAIQC,EAJR,KAMTC,EAAWC,mBAiCf,OAPAC,qBAAU,WAER,OA1BiB,WACjB,IAAMC,EAAgB,IAAIC,KAAK,0BAA0BC,UAEzDL,EAAWM,aAAY,WACrB,IAAMC,GAAM,IAAIH,MAAOC,UACjBG,EAAWL,EAAgBI,EAE3BE,EAAOC,KAAKC,MAAMH,EAAQ,OAC1BI,EAAQF,KAAKC,MAAOH,EAAQ,MAAR,MACpBK,EAAUH,KAAKC,MAAOH,EAAQ,KAAT,KACrBM,EAAUJ,KAAKC,MAAOH,EAAQ,IAAkB,KAElDA,EAAW,EACbO,cAAcf,EAASgB,UAEvBvB,EAAagB,GACbd,EAAciB,GACdf,EAAgBgB,GAChBd,EAAgBe,MAGjB,KAIHG,GACO,WACLF,cAAcf,EAASgB,aAKzB,0BAASE,UAAU,kBAAnB,UACE,0BAASA,UAAU,QAAnB,UACE,gCACE,8FACA,mGAEF,gCACE,oCACE,4BAAI1B,IACJ,4BAAG,6CAEL,qCACA,oCACE,4BAAIE,IACJ,4BAAG,8CAEL,qCACA,oCACE,4BAAIE,IACJ,4BAAG,gDAEL,qCACA,oCACE,4BAAIE,IACJ,4BAAG,wDAIT,yBAASoB,UAAU,mBAAnB,SACE,wBACEC,MAAM,MACNC,OAAO,MACPC,IAAI,4CACJC,MAAM,uBACNC,YAAY,IACZC,MAAM,2FACNC,iBAAe,UC1EzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4a9f2437.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [timerDays, setTimerDays] = useState('00');\n  const [timerHours, setTimerHours] = useState('00');\n  const [timerMinutes, setTimerMinutes] = useState('00');\n  const [timerSeconds, setTimerSeconds] = useState('00');\n\n  let interval = useRef();\n\n  const startTimer = () => {\n    const countdownDate = new Date('October, 2021 00:00:00').getTime();\n\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = countdownDate - now;\n\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor((distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)));\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      if (distance < 0) {\n        clearInterval(interval.current);\n      } else {\n        setTimerDays(days);\n        setTimerHours(hours);\n        setTimerMinutes(minutes);\n        setTimerSeconds(seconds);\n      }\n\n    }, 1000);\n  };\n\n  useEffect(() => {\n    startTimer();\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n\n  return (\n    <section className=\"timer-container\">\n      <section className=\"timer\">\n        <div>\n          <h2>Contagem Regressiva para a segunda temporada de Demon Slayer</h2>\n          <p>A segunda temporada de Demon Slayer estreia em outubro de 2021.</p>\n        </div>\n        <div>\n          <section>\n            <p>{timerDays}</p>\n            <p><small>Dia</small></p>\n          </section>\n          <span>:</span>\n          <section>\n            <p>{timerHours}</p>\n            <p><small>hora</small></p>\n          </section>\n          <span>:</span>\n          <section>\n            <p>{timerMinutes}</p>\n            <p><small>Minuto</small></p>\n          </section>\n          <span>:</span>\n          <section>\n            <p>{timerSeconds}</p>\n            <p><small>Segundos</small></p>\n          </section>\n        </div>\n      </section>\n      <section className=\"container-iframe\">\n        <iframe\n          width=\"560\"\n          height=\"315\"\n          src=\"https://www.youtube.com/embed/2MKkj1DQ0NU\"\n          title=\"YouTube video player\"\n          frameborder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowfullscreen>\n        </iframe>\n      </section>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}